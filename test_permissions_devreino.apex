// Teste de permiss√µes na devReino - comparar com scratch
try {
    System.debug('=== TESTE DE PERMISS√ïES - DEVREINO ===');
    
    // Teste 1: Query b√°sica
    List<Event> events = [SELECT Id, Subject FROM Event LIMIT 1];
    System.debug('‚úÖ Query b√°sica: ' + events.size() + ' eventos');
    
    if (!events.isEmpty()) {
        String eventId = events[0].Id;
        System.debug('üìÖ Testando com evento: ' + eventId);
        
        // Teste 2: Query completa como no AppointmentController (COM Type)
        try {
            Event eventToUpdate = [
                SELECT
                    Id,
                    Subject,
                    Location,
                    StartDateTime,
                    EndDateTime,
                    IsAllDayEvent,
                    Type,
                    Description,
                    reuniaoCriada__c,
                    statusReuniao__c,
                    WhoId,
                    WhatId,
                    gestor__c,
                    liderComercial__c,
                    sdr__c,
                    salaReuniao__c,
                    fase_evento__c,
                    produto_evento__c
                FROM Event
                WHERE Id = :eventId
                WITH SECURITY_ENFORCED
                LIMIT 1
            ];
            System.debug('‚úÖ Query completa COM Type funcionou!');
            System.debug('üìã Type=' + eventToUpdate.Type);
            
        } catch (Exception e) {
            System.debug('‚ùå Erro na query COM Type: ' + e.getMessage());
            
            // Teste 2b: Query sem Type
            try {
                Event eventToUpdate2 = [
                    SELECT
                        Id,
                        Subject,
                        Location,
                        StartDateTime,
                        EndDateTime,
                        IsAllDayEvent,
                        Description,
                        reuniaoCriada__c,
                        statusReuniao__c,
                        WhoId,
                        WhatId,
                        gestor__c,
                        liderComercial__c,
                        sdr__c,
                        salaReuniao__c,
                        fase_evento__c,
                        produto_evento__c
                    FROM Event
                    WHERE Id = :eventId
                    WITH SECURITY_ENFORCED
                    LIMIT 1
                ];
                System.debug('‚úÖ Query SEM Type funcionou!');
            } catch (Exception e2) {
                System.debug('‚ùå Erro na query SEM Type: ' + e2.getMessage());
            }
        }
        
        // Teste 3: Verificar se campo Type existe
        Schema.DescribeSObjectResult eventDescribe = Event.SObjectType.getDescribe();
        Map<String, Schema.SObjectField> fieldMap = eventDescribe.fields.getMap();
        
        if (fieldMap.containsKey('type')) {
            System.debug('‚úÖ Campo Type EXISTE na devReino');
        } else {
            System.debug('‚ùå Campo Type N√ÉO EXISTE na devReino');
        }
    }
    
} catch (Exception e) {
    System.debug('‚ùå ERRO GERAL: ' + e.getMessage());
    System.debug('üîç Tipo: ' + e.getTypeName());
    System.debug('üîç Linha: ' + e.getLineNumber());
}
